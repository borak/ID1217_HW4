Implement your multithreaded programs in Java, 
using Java threads, monitors (synchronized objects) 
and Java concurrent utilities. Alternatively, you 
may implement the program in C++ with the Pthread library.
Note that you are not allowed to use semaphores in this homework. 
This homework is about concurrent programming with threads 
and concurrent objects in an object-oriented programming environment. 

Java SDK SE, namely, Java threads/tasks (Thread, Runnable) with 
shared objects, such as monitors (classes with synchronized methods) 
or concurrent objects using explicit locks with conditions 
(java.util.concurrent.locks) or/and atomic variables 
(java.util.concurrent.atomic); the executor framework, concurrent 
collections and synchronizers (java.util.concurrent)

-------------------------------------------------------------------

 A Repair Station (40 points)

A vehicle repair station can repair vehicles of three different types A, B and C.
 The station has the following capacity:
It can repair in parallel at most a, b, c vehicles of type A, B, C, correspondingly;
It can repair in parallel at most v vehicles of different types.
If a vehicle cannot be repaired because any (or both) of the above limitations, 
the vehicle has to wait until it can get a place to be repaired.

(a) Develop a concurrent object class (a monitor with condition variables) that 
controls the station so that several vehicles can be repaired in parallel according
 to the capacity of the station as described above. Define the monitor's operations
 and their implementation. Represent vehicles as processes and show how they can use
 the monitor. Is your solution fair? Explain (in comments in the source code).

Develop and implement a multithreaded application (in Java or C++) that simulates
 the actions of the vehicles represented as concurrent threads. Your simulation program
 should implemented all "real world" concurrency in actions of the vehicles as described
 in the above scenario. Represent the repair station as a monitor (a synchronized object)
 containing a set of counters that define available free places for vehicles of different
 types and the total number of available space. The monitor should be used to control
 access to the repair station so that several vehicles can be repaired in parallel
 according to the capacity of the station as described above. Develop and implement
 the monitor's methods. The vehicle threads calls the monitor methods to request
 and release access to the station in order to be repaired.

In your simulation program, assume that each vehicle periodically arrives at the
 station to get repaired. Have the vehicles sleep (pause) for a random amount of
 time between arriving at the station to simulate the time it takes to travel;
 and have the vehicles sleep (pause) for a smaller random amount of time to simulate
 the time it takes to be repaired at the station. Stop the simulation after each 
vehicle has arrived at the station trips (the given amount) times. Your program 
should print a trace of the interesting events in the program. 
Is your solution fair? Explain (in comments in the source code).